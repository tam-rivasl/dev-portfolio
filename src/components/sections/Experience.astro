---
import Section from "../Section.astro";
import HTML from "@/icons/html.astro";
import CSS from "@/icons/css.astro";
import JavaScript from "@/icons/javascript.astro";
import TypeScript from "@/icons/type.astro";
import React from "@/icons/react.astro";
import Node from "@/icons/node.astro";
import MySQL from "@/icons/sql.astro";
import Git from "@/icons/git.astro";
import GitHub from "@/icons/GitHub.astro";
import Tailwind from "@/icons/tailwind.astro";
import Next from "@/icons/next.astro";
import Swift from "@/icons/swift.astro";
import SwiftUI from "@/icons/swiftui.astro";
import Kotlin from "@/icons/kotlin.astro";
import Flutter from "@/icons/flutter.astro";

const SKILLS_ICONS: Record<string, any> = {
  HTML,
  CSS,
  JavaScript,
  TypeScript,
  React,
  Node,
  MySQL,
  Git,
  GitHub,
  Next,
  Tailwind,
  Swift,
  SwiftUI,
  Kotlin,
  Flutter,
};

interface Work {
  name: string;
  position: string;
  url?: string;
  startDate: DateStr;
  endDate?: DateStr | null;
  summary?: string;
  highlights?: Highlight;
  responsibilities?: string[];
  achievements?: string[];
  skills?: string[];
  location?: string;
  location_type?: string;
}

type DateStr = `${string}-${string}-${string}`;
type Highlight = string[];

const { work }: { work?: Work[] } = Astro.props;
---

<Section className={Astro.props.className} title="Experience">
  <ul class="flex flex-col">
    {work?.map(({ name, startDate, endDate, position, summary, responsibilities, achievements, url, skills, location, location_type }) => {
      const startYear = new Date(startDate).getFullYear();
      const endYear = endDate != null ? new Date(endDate).getFullYear() : "Present";

      return (
        <li class="relative print:py-2">
          <div class="group relative grid pb-1 print:pb-0 transition-all print:grid-cols-1 print:gap-1 sm:grid-cols-12 sm:gap-8 md:gap-6 lg:hover:!opacity-100">
            <header class="relative mt-1 text-xs font-semibold sm:col-span-2">
              <time datetime={startDate} data-title={startDate}>{startYear}</time> - <time datetime={endDate} data-title={endDate}>{endYear}</time>
            </header>
            <div class="relative flex flex-col pb-6 print:pb-0 before:-ml-6 sm:col-span-10 before:w-px print:before:hidden before:absolute before:bg-skin-muted before:h-full before:mt-2">
              <div class="absolute w-2 h-2 bg-skin-muted rounded-full mt-2 -translate-x-[1.71rem] ring print:hidden ring-skin-fill"></div>
              <h3>
                <div class="inline-flex items-center text-lg print:text-base leading-tight group/link focus-visible:text-amber-500" aria-label={`${position} - ${name}`}>
                  <span>{position} <span>@</span> 
                    {url ? (
                      <a class="text-skin-hue" href={url} title={`Ver ${name}`} target="_blank">{name}</a>
                    ) : (
                      <span>{name}</span>
                    )}
                  </span>
                </div>
              </h3>
              {(location || location_type) && (
                <div class="text-xs text-skin-muted">
                  {location} {location && location_type && '-'} {location_type}
                </div>
              )}
              <div class="mt-4 flex flex-col gap-4 print:gap-0 print:text-xs text-sm" x-data="{ expanded: false }">
                {summary && (
                  <div class="flex flex-col gap-1">
                    <h4>Summary:</h4>
                    <p class="text-skin-muted ml-4">{summary}</p>
                  </div>
                )}

                {(responsibilities || achievements) && (
                  <div class="flex flex-col gap-4">
                    {responsibilities && (
                      <div class="flex flex-col gap-1">
                        <h4>Responsibilities:</h4>
                        <ul class="text-skin-muted ml-4 flex list-disc flex-col gap-2">
                          {responsibilities.map((item) => (
                            <li>{item}</li>
                          ))}
                        </ul>
                      </div>
                    )}

                    {achievements && (
                      <div class="flex flex-col gap-1">
                        <h4>Achievements:</h4>
                        <ul class="text-skin-muted ml-4 flex list-disc flex-col gap-2">
                          {achievements.map((item) => (
                            <li>{item}</li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                )}

                <button @click="expanded = !expanded" class="print:hidden group/more w-fit cursor-pointer items-center justify-center gap-1.5 text-xs underline text-skin-muted transition-all hover:text-skin-base flex">
                  <span x-text="expanded ? 'Show less' : 'Show more'">Show more</span>
                  <svg class="w-4 h-4 group-hover/more:translate-y-0.5 duration-200 ease-out" :class="{ 'rotate-180': expanded }" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>
                </button>

                {skills && (
                  <ul class="flex print:hidden flex-wrap gap-2" aria-label="Technologies used">
                    {skills.map(skill => {
                      const iconName = skill === "Next.js" ? "Next" : skill;
                      const Icon = SKILLS_ICONS[iconName];
                      return (
                        <li class="bg-skin-button-accent/20 border-skin-hue/20 text-skin-hue print:p-0 print:bg-transparent print:text-zinc-800 flex gap-1 items-center border-solid print:border-none border rounded-md px-2 py-0.5 text-xs">
                          {Icon && <Icon />} <span>{skill}</span>
                        </li>
                      );
                    })}
                  </ul>
                )}
              </div>
            </div>
          </div>
        </li>
      );
    })}
  </ul>  
</Section>

<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/collapse@3.x.x/dist/cdn.min.js"></script>
<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<style>
  li::marker {
    @apply text-skin-hue;
  }
</style>
